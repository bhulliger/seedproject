apply plugin: "java"

// ############################################################################
// Source Code Configuration
// ############################################################################
sourceCompatibility = 1.8

// ############################################################################
// Source Sets
// ############################################################################
sourceSets {
	generated {
        java {
            srcDir 'src/generated/java'
        }
    }
}

// ############################################################################
// Dependencies for all projects
// ############################################################################
apply from: "$rootDir/gradle/java/dependencies.gradle"

// ############################################################################
// Cargo
// ############################################################################
apply from: "$rootDir/gradle/cargo.gradle"

// ############################################################################
// Unit & Integration Tests & & Functional Tests & JMeter Tests
// ############################################################################
apply from: "$rootDir/gradle/integrationTest.gradle"

// apply from: "$rootDir/gradle/functionalTest.gradle"

apply from: "$rootDir/gradle/loadTest.gradle"


// ############################################################################
// Build & Distribution
// ############################################################################
jar {
	manifest {
		attributes 'Implementation-Title' : rootProject.name + "-" + project.name, 'Implementation-Version' : version
	}
}

// ############################################################################
// Reporting
// ############################################################################
jacocoTestReport {
	reports {
		xml.enabled true
	}
}

// ############################################################################
// Project Initialization
// ############################################################################
initProject << {

	if (project.getChildProjects().isEmpty()) {
		sourceSets*.java.srcDirs*.each {
			new File(it.toString() + "/" + rootProject.group.replaceAll("\\.", "/") + "/" + rootProject.name + "/" + project.name).mkdirs()
		}
		sourceSets*.resources.srcDirs*.each {
			new File(it.toString() + "/" + rootProject.group.replaceAll("\\.", "/") + "/" + rootProject.name + "/" + project.name).mkdirs()
		}
	}
}


