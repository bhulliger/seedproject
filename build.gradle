// ############################################################################
// Group Definitions
// ############################################################################
group = 'ch.essentialmustard'

// ############################################################################
// System Environment
// ############################################################################
ext.envProperties = System.getenv()

// ############################################################################
// Versioning
// ############################################################################
apply from: 'versioning.gradle'

// ############################################################################
// Environment
// ############################################################################
apply from: "dist/conf/$env/profile.gradle"

println "#####################################################################"
println "# Environment: 	$env"
println "# Version: 	" + version
println "# Group: 	" + group		
println "# BaseUrl: 	$profile.baseurl"
println "# Build Date: 	" + new Date()
println "#####################################################################"

// ############################################################################
// Analysis
// ############################################################################
apply plugin: "sonar-runner"
sonarRunner {
	sonarProperties {
		property "sonar.sourceEncoding", "UTF-8"
	}
}


// ############################################################################
// Global Subproject definitions
// ############################################################################
subprojects {

	apply plugin: "java"
	apply plugin: "eclipse"
	apply plugin: "eclipse-wtp"
	apply plugin: "jacoco"

	version = rootProject.version
	group = rootProject.group

	// ########################################################################
	// Source Code Configuration
	// ########################################################################
	sourceCompatibility = 1.8

	// ########################################################################
	// Dependencies
	// ########################################################################
	dependencies {
		testCompile group: 'junit', 			name: 'junit', 	version: '4.+'

		compile 	group: 'org.projectlombok', name: 'lombok', version: '1.14.2'	

	}



	// ########################################################################
	// Build & Distribution
	// ########################################################################
	jar {
		manifest {
			attributes 'Implementation-Title': rootProject.name + "-" + project.name, 'Implementation-Version': version
		}
	}

	// ########################################################################
	// Analysis
	// ########################################################################
	jacocoTestReport {
		reports {
			xml.enabled true
		}
	}

	// ########################################################################
	// Project Initialization
	// ########################################################################
	task deleteDirs << {

		def console = System.console()
		if (console != null) {
			if (console.readLine("Are you sure you want to delete all src directories? Cannot be undone. [y,N]: ") == 'y') {
				delete 'src'
				delete 'bin'
			}
		} else {
			// a bit drastic. when no console is available, the deletion is done without asking.
			delete 'src'
			delete 'bin'
		}
	}

	task createDirs << {

		if (project.getChildProjects().isEmpty()) {
			sourceSets*.java.srcDirs*.each { 
				new File(it.toString() + "/" + parent.group.replaceAll("\\.", "/") +"/" + rootProject.name + "/" + project.name).mkdirs()
			}
	   		sourceSets*.resources.srcDirs*.each { 
	   			new File(it.toString() + "/" + parent.group.replaceAll("\\.", "/") +"/" + rootProject.name + "/" + project.name).mkdirs()
	   		}
   		}
	}

}

// ############################################################################
// Global Projects definitions
// ############################################################################
allprojects {

	// ########################################################################
	// Repositories
	// ########################################################################
	repositories {
		mavenCentral()
	}

	
}


